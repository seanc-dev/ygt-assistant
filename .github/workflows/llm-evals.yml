name: LLM Evals (Mock Graph)

on:
  pull_request:
    paths:
      - 'llm_testing/**'
      - 'services/**'
      - 'presentation/api/**'
      - 'docs/llm/**'
  workflow_dispatch: {}

jobs:
  evals:
    runs-on: ubuntu-latest
    env:
      USE_MOCK_GRAPH: 'true'
      OFFLINE_EVAL: ${{ secrets.LLM_EVAL_API_KEY == '' && 'true' || 'false' }}
      DEV_MODE: 'true'
      LLM_EVAL_API_KEY: ${{ secrets.LLM_EVAL_API_KEY }}
      LLM_EVAL_MODEL: ${{ vars.LLM_EVAL_MODEL || 'gpt-4o-mini' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install -r requirements.txt
      - name: Smoke import FastAPI app
        run: |
          python -c "import presentation.api.app; print('app import ok')"
      - name: Run scenarios
        run: |
          python -m llm_testing.runner --all > run_id.txt
      - name: Aggregate and report
        run: |
          RUN_ID=$(cat run_id.txt)
          echo "Run ID: $RUN_ID"
          # Emit a brief Markdown summary artifact
          python - <<'PY'
          import json, glob, os
          rid=open('run_id.txt').read().strip().split()[-1]
          paths=sorted(glob.glob(f'llm_testing/reports/{rid}/*.graded.json'))
          lines=[f"# LLM Evals Summary (run {rid})\n"]
          for p in paths:
            name=p.split('/')[-1].replace('.graded.json','')
            data=json.load(open(p))
            s=data.get('evaluation',{}).get('scores',{})
            lines.append(f"- {name}: {s}")
          open('llm_evals_summary.md','w').write('\n'.join(lines))
          PY
      - name: Upload summary
        uses: actions/upload-artifact@v4
        with:
          name: llm-evals-summary
          path: llm_evals_summary.md
      - name: Auto-patch (dry run)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          RUN_ID=$(cat run_id.txt)
          python llm_testing/auto_patch.py $RUN_ID --dry-run || true
      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: llm-evals-reports
          path: llm_testing/reports


