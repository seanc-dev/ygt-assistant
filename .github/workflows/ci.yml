name: CI

on:
  pull_request:
  push:
    branches: [main, feat/**, chore/**]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: ankane/pgvector:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run targeted tests (msft + providers)
        env:
          DEV_MODE: "true"
          USE_MOCK_GRAPH: "true"
        run: |
          pytest -q \
            tests/api/test_connections_msft.py \
            tests/providers/test_microsoft_mocks.py \
            tests/services/test_microsoft_email.py \
            tests/services/test_microsoft_calendar.py
  agent-evals:
    if: false # disabled (legacy e2e not maintained)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run agent evals (@e2e)
        env:
          RUN_E2E: true
        run: pytest -q -m e2e
  llm-loop:
    runs-on: ubuntu-latest
    env:
      DEV_MODE: "true"
      USE_MOCK_GRAPH: "true"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run llm_testing minimal loop (in-process)
        run: |
          python - << 'PY'
          from llm_testing.backends.inprocess import InProcessBackend
          from llm_testing.evaluation_loop import MinimalEvaluationLoop
          backend = InProcessBackend()
          loop = MinimalEvaluationLoop(backend)
          out = loop.run_smoke()
          print({k: type(v).__name__ for k,v in out.items()})
          PY
      # Skip migrations in this workflow; covered elsewhere
